#lang racket
(define-syntax (swap stx)
    (syntax-case stx ()
      [(_ a b) #'(let ([t a])
                   (set! a b)
                   (set! b t))]))
(let ([x 5] [y 10])
    (swap x y)
    (list x y))
(define (g) (print 9))
(define-syntax (s stx)
    (syntax-case stx ()
      [(_) #`(#,#'g)]))
(s)
(display "\n*******\n")
(define (g2) (values 7 8 9))
(define-syntax (s2 stx)
    (syntax-case stx ()
      [(_) #`(#,@#'(g2))]))
(s2)

; #`(print #,#'g)